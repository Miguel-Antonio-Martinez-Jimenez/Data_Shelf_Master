// <auto-generated />
using System;
using DataShelfMaster.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataShelfMaster.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20230726194836_Tables")]
    partial class Tables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("DataShelfMaster.Entities.Book", b =>
                {
                    b.Property<string>("ISBN")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Edition")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ISBN");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("DataShelfMaster.Entities.Personnel", b =>
                {
                    b.Property<int>("IdPersonnel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("FkRole")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdPersonnel");

                    b.HasIndex("FkRole");

                    b.ToTable("Personnels");
                });

            modelBuilder.Entity("DataShelfMaster.Entities.Role", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NameRole")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdRole");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DataShelfMaster.Entities.Solicitude", b =>
                {
                    b.Property<int>("IdSolicitude")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateDevolution")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateSolicitude")
                        .HasColumnType("datetime");

                    b.Property<string>("FkISBN")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("FkMatric")
                        .IsRequired()
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdSolicitude");

                    b.HasIndex("FkISBN");

                    b.HasIndex("FkMatric");

                    b.ToTable("Solicitudes");
                });

            modelBuilder.Entity("DataShelfMaster.Entities.Student", b =>
                {
                    b.Property<string>("Matric")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Career")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<string>("Turn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Matric");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DataShelfMaster.Entities.Personnel", b =>
                {
                    b.HasOne("DataShelfMaster.Entities.Role", "Roles")
                        .WithMany()
                        .HasForeignKey("FkRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("DataShelfMaster.Entities.Solicitude", b =>
                {
                    b.HasOne("DataShelfMaster.Entities.Book", "Books")
                        .WithMany()
                        .HasForeignKey("FkISBN");

                    b.HasOne("DataShelfMaster.Entities.Student", "Students")
                        .WithMany()
                        .HasForeignKey("FkMatric")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Books");

                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
